clear all;

raw_data=randi([0 1],324,1);

% [cfgLDPCEnc,decodercfg] = generateConfigLDPC(1/2);
% 
% k_bits = cfgLDPCEnc.NumInformationBits;
% 
% encData=0;
% 
% raw_len = length(raw_data);  
% 
% last_len = mod(raw_len,k_bits);  % 计算是否需要补0
% 
% if last_len>0
% 
%     full_bits = [raw_data.' zeros(1,k_bits-last_len)];
% 
%     full_bits = full_bits.';
%     
%     for i=1:length(full_bits)/k_bits
% 
%     encData((i-1)*(2*k_bits)+1:i*(2*k_bits)) = ldpcEncode(full_bits((i-1)*k_bits+1:i*k_bits),cfgLDPCEnc);
% 
%     end
% 
%     code_data = encData(1:end-(k_bits-last_len)*2);
%     
% end
% 
% figure;
% 
% stem(code_data);

[code_data,last_len]=LDPC_code(raw_data);

M=4;
modSignal = qammod(code_data',M,'InputType','bit','UnitAveragePower',true);

snrdB = 10; % SNR in dB

receivedSignal = awgn(modSignal,snrdB);

% Computing the effective noise variance for given snr
noiseVar = 1/10^(snrdB/10);

% Computing soft estimate i.e., llr
bitsllr = qamdemod(receivedSignal,M,'OutputType','llr','UnitAveragePower',true,'NoiseVariance',noiseVar);

decodBits = ldpcDecode(bitsllr,decodercfg,maxnumiter);
